defaults:
  - override hydra/sweeper: optuna
  - override hydra/sweeper/sampler: tpe
  - _self_

program:  # These are the arguments that define how the train.py script works
  seed: 0
  output_dir: output
  data_dir: data
  log_dir: "/home/remi/PycharmProjects/torchgeo/logs"
  overwrite: True

trainer:
  gpus: 1
  min_epochs: 1
  max_epochs: 1
  benchmark: True
  enable_progress_bar: True
  precision: 16
  strategy: ddp
  #auto_lr_find: True
  #auto_scale_batch_size: binsearch
  limit_train_batches: 2
  limit_val_batches: 2
  limit_test_batches: 2

experiment:
  task: "ccmeo"
  name: "ccmeo_tests"
  module:
    loss:
      _target_: segmentation_models_pytorch.losses.SoftBCEWithLogitsLoss
      ignore_index: null
      #mode: binary
    model:
      _target_: segmentation_models_pytorch.Unet
      encoder_name: resnet50
      encoder_weights: imagenet
      #encoder_output_stride: 16
      in_channels: 3
      classes: 1
    optimizer:
      _target_: torch.optim.AdamW
      lr: 5e-4
      weight_decay: 4e-5
    learning_rate_schedule_patience: 6
    num_filters: 256
  datamodule:
    root_dir: "/home/remi/PycharmProjects/geo-deep-learning/dataset/template_project"
    train_splits:
      - "/home/remi/PycharmProjects/geo-deep-learning/dataset/template_project/tiles512_3bands/template_project_feat4_min-annot1_trn.csv"
    val_splits:
      - "/home/remi/PycharmProjects/geo-deep-learning/dataset/template_project/tiles512_3bands/template_project_feat4_min-annot1_val.csv"
    test_splits:
      - "/home/remi/PycharmProjects/geo-deep-learning/dataset/template_project/tiles512_3bands/template_project_feat4_min-annot1_val.csv"
    patch_size: 512
    batch_size: 12
    num_workers: 8
    class_set: ${experiment.module.model.classes}
    use_prior_labels: False

y: 1
# for hyperparameter optimization with Optuna: https://hydra.cc/docs/next/plugins/optuna_sweeper/
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: maximize
    storage: null
    study_name: ccmeo_optuna_tests
    n_trials: 20
    n_jobs: 1

    search_space:
      experiment.module.optimizer.lr:
        type: float
        log: True
        low: 1e-7
        high: 0.01
      experiment.module.loss._target_:
        type: categorical
        choices: ["segmentation_models_pytorch.losses.SoftBCEWithLogitsLoss"]
      experiment.module.model._target_:
        type: categorical
        choices: ['segmentation_models_pytorch.Unet']
      experiment.module.model.encoder_name:
        type: categorical
        choices: ['resnet50', 'resnet101']
      experiment.module.optimizer._target_:
        type: categorical
        choices: ['torch.optim.AdamW']